name: CI/CD - Sistema Municipal

on:
  push:
    branches: [ main, backend ]
  pull_request:
    branches: [ main ]

jobs:
  # Backend Build
  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./sistema_municipal_backend
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Java 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
    
    - name: Cache Gradle
      uses: actions/cache@v3
      with:
        path: ~/.gradle/caches
        key: gradle-${{ hashFiles('**/*.gradle*') }}
    
    - name: Build Backend
      run: |
        chmod +x ./gradlew
        ./gradlew test
        ./gradlew build
    
    - name: Upload JAR
      uses: actions/upload-artifact@v3
      with:
        name: backend-jar
        path: sistema_municipal_backend/build/libs/*.jar

  # Frontend Build
  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./sistema_municipal_frontend
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '16'
        cache: 'npm'
        cache-dependency-path: sistema_municipal_frontend/package-lock.json
    
    - name: Build Frontend
      run: |
        npm ci
        npm run test -- --watch=false --browsers=ChromeHeadless
        npm run build:prod
    
    - name: Upload Frontend
      uses: actions/upload-artifact@v3
      with:
        name: frontend-dist
        path: sistema_municipal_frontend/dist/

  # Deploy
  deploy:
    if: github.ref == 'refs/heads/main'
    needs: [backend, frontend]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Download Artifacts
      uses: actions/download-artifact@v3
      with:
        path: ./artifacts/
    
    - name: Build Docker Images
      run: |
        docker build -t sistema-backend:latest \
          --build-arg JAR_FILE=artifacts/backend-jar/*.jar \
          -f docker/backend/Dockerfile .
        docker build -t sistema-frontend:latest \
          --build-arg DIST_PATH=artifacts/frontend-dist \
          -f docker/frontend/Dockerfile .
